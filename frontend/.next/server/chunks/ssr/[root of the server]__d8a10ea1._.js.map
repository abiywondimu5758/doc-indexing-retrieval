{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///home/abiy/Documents/assignments/Indexing/frontend/src/app/components/UploadDocument.tsx"],"sourcesContent":["\"use client\"\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport { useMutation } from '@tanstack/react-query';\n\n// Define response data types\ninterface TokenizeData {\n  title: string;\n  tokens: { [key: string]: number };\n}\ninterface StopwordData {\n  title: string;\n  words: { [key: string]: number };\n}\ninterface StemData {\n  title: string;\n  words: { [key: string]: number };\n}\n\nconst UploadDocument = () => {\n  const [title, setTitle] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [text, setText] = useState('');\n  const [tokenizeData, setTokenizeData] = useState<TokenizeData | null>(null);\n  const [stopwordData, setStopwordData] = useState<StopwordData | null>(null);\n  const [stemData, setStemData] = useState<StemData | null>(null);\n  const [file, setFile] = useState<File | null>(null);\n\n  const tokenRef = useRef<HTMLDivElement>(null);\n  const stopwordRef = useRef<HTMLDivElement>(null);\n  const stemRef = useRef<HTMLDivElement>(null);\n\n  const renderTable = (\n      containerRef: React.RefObject<HTMLDivElement | null>,\n      data: { [key: string]: number },\n      headerLabel: string\n    ) => {\n    const container = d3.select(containerRef.current);\n    container.selectAll('*').remove();\n    const table = container.append('table').style('border-collapse', 'collapse').style('width', '100%');\n    const thead = table.append('thead');\n    const tbody = table.append('tbody');\n\n    thead.append('tr')\n      .selectAll('th')\n      .data(['Word', headerLabel])\n      .enter()\n      .append('th')\n      .text((d: string) => d)\n      .style('border', '1px solid #ccc')\n      .style('padding', '8px')\n      .style('background-color', '#f2f2f2');\n\n    const rows = tbody.selectAll('tr')\n      .data(Object.entries(data))\n      .enter()\n      .append('tr');\n    \n    rows.selectAll('td')\n      .data(d => d)\n      .enter()\n      .append('td')\n      .text(d => d)\n      .style('border', '1px solid #ccc')\n      .style('padding', '8px');\n  };\n\n  const tokenizeMutation = useMutation<TokenizeData, Error, void, unknown>({\n    mutationFn: async () => {\n      const response = await axios.post<TokenizeData>('http://127.0.0.1:8000/api/documents/tokenize', {\n        title, language, original_text: text\n      });\n      return response.data;\n    },\n    onSuccess: (data: TokenizeData) => {\n      setTokenizeData(data);\n    }\n  });\n\n  const stopwordMutation = useMutation<StopwordData, Error, void, unknown>({\n    mutationFn: async () => {\n      const response = await axios.post('http://127.0.0.1:8000/api/documents/stopword', {\n        title,\n        tokens: tokenizeData?.tokens\n      });\n      return response.data;\n    },\n    onSuccess: (data: StopwordData) => {\n      setStopwordData(data);\n    }\n  });\n\n  const stemMutation = useMutation<StemData, Error, void, unknown>({\n    mutationFn: async () => {\n      const response = await axios.post<StemData>('http://127.0.0.1:8000/api/documents/stem', {\n        title,\n        words: stopwordData?.words\n      });\n      return response.data;\n    },\n    onSuccess: (data: StemData) => {\n      setStemData(data);\n    }\n  });\n\n  const handleFileUpload = () => {\n    if (file) {\n      const formData = new FormData();\n      // Using default title and language as file upload doesn't wait for text inputs\n      formData.append('file', file);\n      formData.append('title', \"Untitled File\");\n      formData.append('language', \"en\");\n      axios\n        .post('http://127.0.0.1:8000/api/documents/upload', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        })\n        .then(response => {\n          setTokenizeData(response.data);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      console.error(\"No file selected.\");\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Existing text upload branch: if no file selected, use text & title\n    tokenizeMutation.mutate();\n  };\n\n  useEffect(() => {\n    if (tokenizeData && tokenRef.current) {\n      renderTable(tokenRef, tokenizeData.tokens, 'Count');\n    }\n  }, [tokenizeData]);\n\n  useEffect(() => {\n    if (stopwordData && stopwordRef.current) {\n      renderTable(stopwordRef, stopwordData.words, 'Count');\n    }\n  }, [stopwordData]);\n\n  useEffect(() => {\n    if (stemData && stemRef.current) {\n      renderTable(stemRef, stemData.words, 'Count');\n    }\n  }, [stemData]);\n\n  return (\n    <div>\n      <h2>Upload Document</h2>\n      {/* Existing text upload form */}\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Title\" value={title} onChange={e => setTitle(e.target.value)} required />\n        <select value={language} onChange={e => setLanguage(e.target.value)}>\n          <option value=\"en\">English</option>\n          <option value=\"am\">Amharic</option>\n        </select>\n        <textarea placeholder=\"Enter document text\" value={text} onChange={e => setText(e.target.value)} required />\n        <button type=\"submit\">Upload and Tokenize</button>\n      </form>\n\n      {/* New file upload section */}\n      <div style={{ marginTop: '20px' }}>\n        <h3>Upload File Directly</h3>\n        <input type=\"file\" onChange={e => setFile(e.target.files ? e.target.files[0] : null)} />\n        <button onClick={handleFileUpload}>Upload File</button>\n      </div>\n\n      <div>\n        <h3>Tokens</h3>\n        <div ref={tokenRef} />\n      </div>\n\n      {tokenizeData && (\n        <div>\n          <button onClick={() => stopwordMutation.mutate()}>Remove Stop Word</button>\n          <div>\n            <h3>Stopword Removed</h3>\n            <div ref={stopwordRef} />\n          </div>\n        </div>\n      )}\n\n      {stopwordData && (\n        <div>\n          <button onClick={() => stemMutation.mutate()}>Stem and Normalize</button>\n          <div>\n            <h3>Stemmed and Normalized</h3>\n            <div ref={stemRef} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadDocument;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///home/abiy/Documents/assignments/Indexing/frontend/src/app/components/Search.tsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\ninterface SearchResult {\n  title: string;\n  processed_text: string;}\n  \n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [results, setResults] = useState<SearchResult[]>([]);\n\n  const handleSearch = async () => {\n    const response = await axios.get(`http://127.0.0.1:8000/api/search/?q=${query}&lang=${language}`);\n    setResults(response.data.results);\n  };\n\n  return (\n    <div>\n      <h2>Search</h2>\n      <input type=\"text\" placeholder=\"Search...\" value={query} onChange={(e) => setQuery(e.target.value)} />\n      <select value={language} onChange={(e) => setLanguage(e.target.value)}>\n        <option value=\"en\">English</option>\n        <option value=\"am\">Amharic</option>\n      </select>\n      <button onClick={handleSearch}>Search</button>\n\n      <div>\n        {results.map((doc, index) => (\n          <div key={index}>\n            <h3>{doc.title}</h3>\n            <p>{doc.processed_text}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AASA,MAAM,SAAS;IACb,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAEzD,MAAM,eAAe;QACnB,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,oCAAoC,EAAE,MAAM,MAAM,EAAE,UAAU;QAChG,WAAW,SAAS,IAAI,CAAC,OAAO;IAClC;IAEA,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAM,MAAK;gBAAO,aAAY;gBAAY,OAAO;gBAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;0BACjG,8OAAC;gBAAO,OAAO;gBAAU,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;kCAClE,8OAAC;wBAAO,OAAM;kCAAK;;;;;;kCACnB,8OAAC;wBAAO,OAAM;kCAAK;;;;;;;;;;;;0BAErB,8OAAC;gBAAO,SAAS;0BAAc;;;;;;0BAE/B,8OAAC;0BACE,QAAQ,GAAG,CAAC,CAAC,KAAK,sBACjB,8OAAC;;0CACC,8OAAC;0CAAI,IAAI,KAAK;;;;;;0CACd,8OAAC;0CAAG,IAAI,cAAc;;;;;;;uBAFd;;;;;;;;;;;;;;;;AAQpB;uCAEe","debugId":null}}]
}