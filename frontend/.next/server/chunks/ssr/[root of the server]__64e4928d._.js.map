{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/abiy/Documents/assignments/Indexing/frontend/src/app/components/Search.tsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\ninterface SearchResult {\n  title: string;\n  original_text: string;\n  similarity: number;\n}\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [searchType, setSearchType] = useState('vector');\n  const [results, setResults] = useState<SearchResult[]>([]);\n\n  const handleSearch = async () => {\n    const response = await axios.get(\n      `http://localhost:8000/api/documents/vector?q=${query}&lang=${language}`\n    );\n    console.log(response.data.results);\n    setResults(response.data.results);\n  };\n\n  const handleSearchBool = async () => {\n    const response = await axios.get(\n      `http://localhost:8000/api/documents/boolean?q=${query}&lang=${language}`\n    );\n    console.log(response.data.results);\n    setResults(response.data.results);\n  };\n\n  const handleSearchClick = () => {\n    if (searchType === 'bool') {\n      handleSearchBool();\n    } else {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 bg-gray-50 shadow-lg rounded\">\n      <h2 className=\"text-3xl font-bold text-center text-gray-800 mb-6\">\n        Search Documents\n      </h2>\n      <div className=\"space-y-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n        <div className=\"flex space-x-4\">\n          <select\n            value={language}\n            onChange={(e) => setLanguage(e.target.value)}\n            className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"en\">English</option>\n            <option value=\"am\">Amharic</option>\n          </select>\n          <select\n            value={searchType}\n            onChange={(e) => setSearchType(e.target.value)}\n            className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"vector\">Vector</option>\n            <option value=\"bool\">Bool</option>\n          </select>\n        </div>\n        <button\n          onClick={handleSearchClick}\n          className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded\"\n        >\n          Search\n        </button>\n      </div>\n      {results.length > 0 && (\n        <div className=\"mt-8\">\n          <h3 className=\"text-2xl font-bold text-gray-700 mb-4\">Results</h3>\n          <div className=\"space-y-4\">\n            {results.map((doc, index) => (\n              <div\n                key={index}\n                className=\"border p-4 rounded hover:shadow-lg transition-shadow\"\n              >\n                <h4 className=\"text-xl font-semibold text-gray-800\">\n                  {doc.title}\n                </h4>\n                <p className=\"text-gray-600\">{doc.original_text}</p>\n                <p className=\"text-gray-600\">{doc.similarity}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAUA,MAAM,SAAS;IACb,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAEzD,MAAM,eAAe;QACnB,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,CAAC,6CAA6C,EAAE,MAAM,MAAM,EAAE,UAAU;QAE1E,QAAQ,GAAG,CAAC,SAAS,IAAI,CAAC,OAAO;QACjC,WAAW,SAAS,IAAI,CAAC,OAAO;IAClC;IAEA,MAAM,mBAAmB;QACvB,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,CAAC,8CAA8C,EAAE,MAAM,MAAM,EAAE,UAAU;QAE3E,QAAQ,GAAG,CAAC,SAAS,IAAI,CAAC,OAAO;QACjC,WAAW,SAAS,IAAI,CAAC,OAAO;IAClC;IAEA,MAAM,oBAAoB;QACxB,IAAI,eAAe,QAAQ;YACzB;QACF,OAAO;YACL;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAoD;;;;;;0BAGlE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAU;;;;;;kCAEZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,WAAU;;kDAEV,8OAAC;wCAAO,OAAM;kDAAK;;;;;;kDACnB,8OAAC;wCAAO,OAAM;kDAAK;;;;;;;;;;;;0CAErB,8OAAC;gCACC,OAAO;gCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gCAC7C,WAAU;;kDAEV,8OAAC;wCAAO,OAAM;kDAAS;;;;;;kDACvB,8OAAC;wCAAO,OAAM;kDAAO;;;;;;;;;;;;;;;;;;kCAGzB,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;YAIF,QAAQ,MAAM,GAAG,mBAChB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,8OAAC;wBAAI,WAAU;kCACZ,QAAQ,GAAG,CAAC,CAAC,KAAK,sBACjB,8OAAC;gCAEC,WAAU;;kDAEV,8OAAC;wCAAG,WAAU;kDACX,IAAI,KAAK;;;;;;kDAEZ,8OAAC;wCAAE,WAAU;kDAAiB,IAAI,aAAa;;;;;;kDAC/C,8OAAC;wCAAE,WAAU;kDAAiB,IAAI,UAAU;;;;;;;+BAPvC;;;;;;;;;;;;;;;;;;;;;;AAerB;uCAEe","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/abiy/Documents/assignments/Indexing/frontend/src/app/components/UploadDocument.tsx"],"sourcesContent":["\"use client\"\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport { useMutation } from '@tanstack/react-query';\n\n// Define response data types\ninterface TokenizeData {\n  title: string;\n  tokens: { [key: string]: number };\n  language: string;\n}\ninterface TokenizeResponse {\n  results: TokenizeData[];\n}\ninterface StopwordData {\n  title: string;\n  words: { [key: string]: number };\n  language: string;\n}\ninterface StemResult {\n  title: string;\n  words: { [key: string]: number };\n  language: string;\n  labialized: { [key: string]: number };\n  shortened: { [key: string]: number };\n  punctuation: { [key: string]: number };\n}\ninterface StemResponse {\n  results: StemResult[];\n  posting_list: { [key: string]: { title: string; frequency: number }[] };\n}\n\n// Add new types if needed\ninterface DocumentInput {\n  title: string;\n  original_text: string;\n  language: string; // newly added field\n}\n\n// Add new type for stopword response\ninterface StopwordResponse {\n  results: {\n    title: string;\n    words: { [key: string]: number };\n    language: string;\n  }[];\n}\n\nconst UploadDocument = () => {\n  const [language, setLanguage] = useState('en');\n  // Remove old title and text states\n  // New state for number of documents and their inputs\n  const [docCount, setDocCount] = useState(1);\n  const [documents, setDocuments] = useState<DocumentInput[]>([{ title: '', original_text: '', language: 'en' }]);\n  const [tokenizeData, setTokenizeData] = useState<TokenizeResponse | null>(null);\n  const [stopwordData, setStopwordData] = useState<StopwordResponse | null>(null);\n  const [stemData, setStemData] = useState<StemResponse | null>(null);\n  const [fileCount, setFileCount] = useState(1);\n  const [files, setFiles] = useState<(File | null)[]>([null]);\n  const [uploadMode, setUploadMode] = useState(\"text\");\n\n  const tokenRef = useRef<HTMLDivElement>(null);\n  const stopwordRef = useRef<HTMLDivElement>(null);\n  const wordsRef = useRef<HTMLDivElement>(null);\n  const labializedRef = useRef<HTMLDivElement>(null);\n  const shortenedRef = useRef<HTMLDivElement>(null);\n  const punctuationRef = useRef<HTMLDivElement>(null);\n\n  const renderTable = (\n      containerRef: React.RefObject<HTMLDivElement | null>,\n      data: { [key: string]: number },\n      headerLabel: string\n    ) => {\n    const container = d3.select(containerRef.current);\n    container.selectAll('*').remove();\n    const table = container.append('table').style('border-collapse', 'collapse').style('width', '100%');\n    const thead = table.append('thead');\n    const tbody = table.append('tbody');\n\n    thead.append('tr')\n      .selectAll('th')\n      .data(['Word', headerLabel])\n      .enter()\n      .append('th')\n      .text((d: string) => d)\n      .style('border', '1px solid #ccc')\n      .style('padding', '8px')\n      .style('background-color', '#f2f2f2');\n\n    const rows = tbody.selectAll('tr')\n      .data(Object.entries(data))\n      .enter()\n      .append('tr');\n    \n    rows.selectAll('td')\n      .data(d => d)\n      .enter()\n      .append('td')\n      .text(d => d)\n      .style('border', '1px solid #ccc')\n      .style('padding', '8px');\n  };\n\n  // Update tokenizeMutation to send documents array instead of a single document\n  const tokenizeMutation = useMutation<TokenizeResponse, Error, void, unknown>({\n    mutationFn: async () => {\n      const response = await axios.post<TokenizeResponse>('http://127.0.0.1:8000/api/documents/tokenize', {\n        documents\n      });\n      return response.data;\n    },\n    onSuccess: (data: TokenizeResponse) => {\n      setTokenizeData(data);\n    }\n  });\n\n  // Modify stopwordMutation to send the proper payload using the tokenize response's results\n  const stopwordMutation = useMutation<StopwordResponse, Error, void, unknown>({\n    mutationFn: async () => {\n      const response = await axios.post<StopwordResponse>('http://127.0.0.1:8000/api/documents/stopword', {\n        results: tokenizeData?.results\n      });\n      return response.data;\n    },\n    onSuccess: (data: StopwordResponse) => {\n      setStopwordData(data);\n    }\n  });\n\n  const stemMutation = useMutation<StemResponse, Error, void, unknown>({\n    mutationFn: async () => {\n      const response = await axios.post<StemResponse>('http://127.0.0.1:8000/api/documents/stem', {\n        results: stopwordData?.results\n      });\n      return response.data;\n    },\n    onSuccess: (data: StemResponse) => {\n        \n      setStemData(data);\n    }\n  });\n\n  // Handler to update individual file fields\n  const handleFileChange = (index: number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const newFiles = [...files];\n    newFiles[index] = e.target.files ? e.target.files[0] : null;\n    setFiles(newFiles);\n  };\n\n  // Update file upload handler to iterate over the files array\n  const handleFileUpload = () => {\n    if (files.some(f => f !== null)) {\n      // Reset state before uploading new files\n      setTokenizeData(null);\n      setStopwordData(null);\n      setStemData(null);\n\n      const formData = new FormData();\n      files.forEach(f => {\n        if (f) {\n          formData.append('file', f);\n          formData.append('title', f.name);\n          formData.append('language', language); // Use the selected language\n        }\n      });\n\n      axios\n        .post('http://127.0.0.1:8000/api/documents/upload', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        })\n        .then(response => {\n          setTokenizeData(response.data);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      console.error(\"No files selected.\");\n    }\n  };\n\n  // Update handleSubmit to use documents array\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Reset state before uploading new text\n    setTokenizeData(null);\n    setStopwordData(null);\n    setStemData(null);\n\n    // Set language for every document\n    const documentsWithLanguage = documents.map(doc => ({ ...doc, language }));\n    // Send documentsWithLanguage instead of documents\n    tokenizeMutation.mutate({ documents: documentsWithLanguage });\n  };\n\n  // Add a handler for updating document fields\n  const handleDocumentChange = (index: number, field: keyof Omit<DocumentInput, 'language'>, value: string) => {\n    const newDocs = [...documents];\n    newDocs[index] = { ...newDocs[index], [field]: value, language };\n    setDocuments(newDocs);\n  };\n\n  // Handle changing the number of documents\n  const handleDocCountChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const count = parseInt(e.target.value, 10);\n    setDocCount(count);\n    const currentCount = documents.length;\n    if (count > currentCount) {\n      setDocuments([...documents, ...Array(count - currentCount).fill({ title: '', original_text: '', language })]);\n    } else {\n      setDocuments(documents.slice(0, count));\n    }\n  };\n\n  // Update handler to change number of file inputs\n  const handleFileCountChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const count = parseInt(e.target.value, 10);\n    setFileCount(count);\n    setFiles(Array(count).fill(null));\n  };\n\n  useEffect(() => {\n    if (tokenizeData && tokenRef.current) {\n      const container = d3.select(tokenRef.current);\n      container.selectAll(\"*\").remove();\n      const docsContainer = container.append(\"div\")\n        .attr(\"class\", \"flex space-x-4 overflow-x-auto\")\n        .style(\"padding\", \"8px\");\n      tokenizeData.results.forEach((result) => {\n        const docDiv = docsContainer.append(\"div\")\n          .attr(\"class\", \"border p-4 rounded\")\n          .style(\"min-width\", \"300px\");\n        docDiv.append(\"h4\")\n          .text(`Tokenized: ${result.title}`)\n          .style(\"font-weight\", \"bold\")\n          .style(\"margin-bottom\", \"8px\");\n        const table = docDiv.append(\"table\")\n          .style(\"border-collapse\", \"collapse\")\n          .style(\"width\", \"100%\");\n        const thead = table.append(\"thead\");\n        const tbody = table.append(\"tbody\");\n        thead.append(\"tr\")\n          .selectAll(\"th\")\n          .data([\"Token\", \"Count\"])\n          .enter()\n          .append(\"th\")\n          .text(d => d)\n          .style(\"border\", \"1px solid #ccc\")\n          .style(\"padding\", \"4px\")\n          .style(\"background-color\", \"#f2f2f2\");\n        Object.entries(result.tokens).forEach(([word, count]) => {\n          const row = tbody.append(\"tr\");\n          row.append(\"td\")\n            .text(word)\n            .style(\"border\", \"1px solid #ccc\")\n            .style(\"padding\", \"4px\");\n          row.append(\"td\")\n            .text(count)\n            .style(\"border\", \"1px solid #ccc\")\n            .style(\"padding\", \"4px\");\n        });\n      });\n    }\n  }, [tokenizeData]);\n\n  useEffect(() => {\n    if (stopwordData && stopwordRef.current) {\n      const container = d3.select(stopwordRef.current);\n      container.selectAll(\"*\").remove();\n      const docsContainer = container.append(\"div\")\n        .attr(\"class\", \"flex space-x-4 overflow-x-auto\")\n        .style(\"padding\", \"8px\");\n      stopwordData.results.forEach((result) => {\n        const docDiv = docsContainer.append(\"div\")\n          .attr(\"class\", \"border p-4 rounded\")\n          .style(\"min-width\", \"300px\");\n        docDiv.append(\"h4\")\n          .text(`Stopword: ${result.title}`)\n          .style(\"font-weight\", \"bold\")\n          .style(\"margin-bottom\", \"8px\");\n        const table = docDiv.append(\"table\")\n          .style(\"border-collapse\", \"collapse\")\n          .style(\"width\", \"100%\");\n        const thead = table.append(\"thead\");\n        const tbody = table.append(\"tbody\");\n        thead.append(\"tr\")\n          .selectAll(\"th\")\n          .data([\"Word\", \"Count\"])\n          .enter()\n          .append(\"th\")\n          .text(d => d)\n          .style(\"border\", \"1px solid #ccc\")\n          .style(\"padding\", \"4px\")\n          .style(\"background-color\", \"#f2f2f2\");\n        Object.entries(result.words).forEach(([word, count]) => {\n          const row = tbody.append(\"tr\");\n          row.append(\"td\")\n            .text(word)\n            .style(\"border\", \"1px solid #ccc\")\n            .style(\"padding\", \"4px\");\n          row.append(\"td\")\n            .text(count)\n            .style(\"border\", \"1px solid #ccc\")\n            .style(\"padding\", \"4px\");\n        });\n      });\n    }\n  }, [stopwordData]);\n\n  useEffect(() => {\n    if (stemData && wordsRef.current) {\n      const container = d3.select(wordsRef.current);\n      container.selectAll(\"*\").remove();\n      \n      // Create a horizontally scrollable container for each document's stem tables\n      const docsContainer = container.append(\"div\")\n        .attr(\"class\", \"flex space-x-4 overflow-x-auto\")\n        .style(\"padding\", \"8px\");\n      \n      stemData.results.forEach((result) => {\n        const docDiv = docsContainer.append(\"div\")\n          .attr(\"class\", \"border p-4 rounded\")\n          .style(\"min-width\", \"300px\");\n        \n        docDiv.append(\"h4\")\n          .text(`Stem: ${result.title}`)\n          .style(\"font-weight\", \"bold\")\n          .style(\"margin-bottom\", \"8px\");\n        \n        const properties = [\n          { key: \"words\", label: \"Words\", data: result.words },\n          { key: \"labialized\", label: \"Labialized\", data: result.labialized },\n          { key: \"shortened\", label: \"Shortened\", data: result.shortened },\n          { key: \"punctuation\", label: \"Punctuation\", data: result.punctuation }\n        ];\n        \n        properties.forEach(prop => {\n          if (Object.keys(prop.data).length) {\n            const tableDiv = docDiv.append(\"div\")\n              .style(\"margin-bottom\", \"8px\");\n            tableDiv.append(\"h5\")\n              .text(prop.label)\n              .style(\"font-weight\", \"600\")\n              .style(\"margin-bottom\", \"4px\");\n            const table = tableDiv.append(\"table\")\n              .style(\"border-collapse\", \"collapse\")\n              .style(\"width\", \"100%\");\n    \n            const thead = table.append(\"thead\");\n            const tbody = table.append(\"tbody\");\n    \n            thead.append(\"tr\")\n              .selectAll(\"th\")\n              .data([\"Token\", \"Count\"])\n              .enter()\n              .append(\"th\")\n              .text(d => d)\n              .style(\"border\", \"1px solid #ccc\")\n              .style(\"padding\", \"4px\")\n              .style(\"background-color\", \"#f2f2f2\");\n    \n            Object.entries(prop.data).forEach(([word, count]) => {\n              const row = tbody.append(\"tr\");\n              row.append(\"td\")\n                .text(word)\n                .style(\"border\", \"1px solid #ccc\")\n                .style(\"padding\", \"4px\");\n              row.append(\"td\")\n                .text(count)\n                .style(\"border\", \"1px solid #ccc\")\n                .style(\"padding\", \"4px\");\n            });\n          }\n        });\n      });\n      \n      // Render posting list in a separate section below with clear formatting\n      const postingContainer = container.append(\"div\")\n        .style(\"margin-top\", \"24px\");\n      postingContainer.append(\"h3\")\n        .text(\"Posting List\")\n        .style(\"font-weight\", \"bold\")\n        .style(\"margin-bottom\", \"8px\");\n      const postingTable = postingContainer.append(\"table\")\n        .style(\"border-collapse\", \"collapse\")\n        .style(\"width\", \"100%\");\n      const postingThead = postingTable.append(\"thead\");\n      const postingTbody = postingTable.append(\"tbody\");\n      postingThead.append(\"tr\")\n        .selectAll(\"th\")\n        .data([\"Word\", \"Documents\"])\n        .enter()\n        .append(\"th\")\n        .text(d => d)\n        .style(\"border\", \"1px solid #ccc\")\n        .style(\"padding\", \"4px\")\n        .style(\"background-color\", \"#f2f2f2\");\n      Object.entries(stemData.posting_list).forEach(([word, details]) => {\n        const row = postingTbody.append(\"tr\");\n        row.append(\"td\")\n          .text(`${word}(${details.frequency})`)\n          .style(\"border\", \"1px solid #ccc\")\n          .style(\"padding\", \"4px\");\n        row.append(\"td\")\n          .text(details.titles.join(\", \"))\n          .style(\"border\", \"1px solid #ccc\")\n          .style(\"padding\", \"4px\");\n      });\n    }\n  }, [stemData]);\n\n  useEffect(() => {\n    setDocuments(prevDocs => prevDocs.map(doc => ({ ...doc, language })));\n  }, [language]);\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 bg-gray-50 shadow-lg rounded\">\n      <h2 className=\"text-3xl font-bold text-center text-gray-800 mb-6\">Upload Document</h2>\n      \n      {/* Dropdown to select upload mode */}\n      <div className=\"mb-6\">\n        <label className=\"mr-4 font-semibold text-gray-700\">Select Mode:</label>\n        <select \n          value={uploadMode} \n          onChange={e => setUploadMode(e.target.value)}\n          className=\"border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <option value=\"text\">Text</option>\n          <option value=\"doc\">Doc</option>\n        </select>\n      </div>\n      \n      {/* Moved language dropdown outside the conditional so it's always visible */}\n      <div className=\"mb-6\">\n        <label className=\"mr-4 font-semibold text-gray-700\">Language:</label>\n        <select \n          value={language} \n          onChange={e => setLanguage(e.target.value)}\n          className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <option value=\"en\">English</option>\n          <option value=\"am\">Amharic</option>\n        </select>\n      </div>\n      \n      {uploadMode === \"text\" ? (\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* Dropdown to choose number of documents */}\n          <div>\n            <label className=\"mr-4 font-semibold text-gray-700\">Number of Documents:</label>\n            <select \n              value={docCount} \n              onChange={handleDocCountChange}\n              className=\"border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              {Array.from({ length: 5 }, (_, i) => i + 1).map(num => (\n                <option key={num} value={num}>{num}</option>\n              ))}\n            </select>\n          </div>\n       \n\n          {/* Map over documents to render title and original_text fields */}\n          {documents.map((doc, index) => (\n            <div key={index} className=\"space-y-2 border p-2 rounded\">\n              <input \n                type=\"text\" \n                placeholder={`Title for Document ${index + 1}`} \n                value={doc.title} \n                onChange={e => handleDocumentChange(index, 'title', e.target.value)} \n                required \n                className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\" \n              />\n              <textarea \n                placeholder={`Enter text for Document ${index + 1}`} \n                value={doc.original_text} \n                onChange={e => handleDocumentChange(index, 'original_text', e.target.value)} \n                required\n                className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\" \n              />\n            </div>\n          ))}\n          <button \n            type=\"submit\" \n            className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded\"\n          >\n            Upload and Tokenize\n          </button>\n        </form>\n      ) : (\n        <div className=\"mt-8 p-4 bg-white border border-gray-200 rounded shadow\">\n          <h3 className=\"text-2xl font-semibold text-gray-700 mb-4\">Upload File Directly</h3>\n          {/* Dropdown to choose number of files */}\n          <div className=\"mb-4\">\n            <label className=\"mr-4 font-semibold text-gray-700\">Number of Files:</label>\n            <select \n              value={fileCount}\n              onChange={handleFileCountChange}\n              className=\"border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              {Array.from({ length: 5 }, (_, i) => i + 1).map(num => (\n                <option key={num} value={num}>{num}</option>\n              ))}\n            </select>\n          </div>\n          {/* Render file input fields based on chosen count */}\n          {Array.from({ length: fileCount }, (_, index) => (\n            <div key={index} className=\"mb-4\">\n              <input \n                type=\"file\" \n                onChange={e => handleFileChange(index, e)}\n                className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          ))}\n          <button \n            onClick={handleFileUpload} \n            className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded\"\n          >\n            Upload File\n          </button>\n        </div>\n      )}\n      \n      {(tokenizeData || stopwordData || stemData) && (\n        <div className=\"mt-8\">\n          <h3 className=\"text-2xl font-semibold text-gray-700 mb-10\">Results</h3>\n          {tokenizeData && (\n            <div><span className=\"text-lg font-semibold text-gray-600\">Tokenized</span>\n            <div ref={tokenRef} className=\"overflow-x-auto\" /></div>\n          )}\n          {stopwordData && (\n            <div className='mt-10'><span className=\"text-lg font-semibold text-gray-600\">Stop words Removes</span>\n            <div ref={stopwordRef} className=\"overflow-x-auto\" /></div>\n          )}\n          {stemData && (\n            <div className='mt-10'><span className=\"text-lg font-semibold text-gray-600\">Stemmed</span>\n            <div ref={wordsRef} className=\"overflow-x-auto\" /></div>\n          )}\n        </div>\n      )}\n      {tokenizeData && !stopwordData && (\n        <button \n          onClick={() => stopwordMutation.mutate()} \n          className=\"mt-4 w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded\"\n        >\n          Remove Stop Word\n        </button>\n      )}\n      {stopwordData && !stemData && (\n        <button \n          onClick={() => stemMutation.mutate()} \n          className=\"mt-4 w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded\"\n        >\n          Stem and Normalize\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default UploadDocument;\n"],"names":[],"mappings":"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","debugId":null}}]
}